@import url("https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css");
@import url("./normalize.css");
@import url("./fontello.css");


*, *::before, *::after {
  box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6{
  margin: 0;
  padding: 0;
}

ul{
  margin: 0;
  padding: 0;
  list-style-type: none;
}

a{
  color : inherit;
  text-decoration: none;
}

/* 숨김 콘첸츠 */
.readable-hidden{
  position: absolute;
  width: 1px;
  height: 1px;
  clip: rect(0,0,0,0);
  margin: -1px;
  overflow: hidden;
}

html{
  font-size: 10px;
}

body {
  background-color: #fff;
  font-size : 1.4em;
  color: #181818;
  font-family: 'Spoqa Han Sans'
}

h2 {
  font-size: 1em;
  font-weight: normal;

}




/* 레이아웃 */

.wrapper{
  background-color: silver;
  background-image: url("images/bg_flower.png");
  background-repeat: no-repeat;
  background-position: 50% 0;
  /* border-top: 1px solid transparent; */
  /* 현업에선 이런 문제 때문에 투명 보더를 1px로 추가시킴
    border-top : 1px solid transparent */
}

.header, .visual, .main, .slogan, .footer{
  width: 940px;
  margin: 0 auto;
}

.header{
  background-color:#fff;
  padding: 0 30px 40px;
  position: relative;
  border-radius: 0 0 15px 15px;
  
}

/* 로고 */
.logo{
  position: absolute;
  top: 45px;
  left: 65px; 
}
.member{
  text-align: right;
  font-size: 0;
  padding: 10px 0;
  position: relative;
  right: -10px;
}

.member li{
  display: inline-block;
  font-size: 1.4rem;
  text-transform: uppercase;
}

.member a{
  padding: 5px 10px;
}

.member li:nth-child(n+2)::before{
  content: ":";
}

/* 메인메뉴 */

.menu{
  
  /* background: orange; */
  background: linear-gradient(to bottom, #f26e21 0%,#ff4c00 35%,#ff4c00 65%,#f26e21 100%);
  background-color: #ff4c00;
  /* background-image: linear-gradient(-45deg, red 0%, green 30%, blue 100%); */
  /* background-repeat: no-repeat; */
  /* background-image: repeating-linear-gradient(225deg, red 0, red 50px, green 50px, green 100px); */
  /* background-position: 50% 30%; */
  /* background-size: 200px 200px; */
  /* background: yellow url("images/ani_flower_03.png") no-repeat 50% 30% /200px 200px; */
  border-top: 2px solid #000;
  /* box-shadow: 0 -5px 0 0 green; */
  border-radius: 0 0 5px 5px;
  padding-left: 225px;
  height: 47px;
}

.menu-item{
  float: left;
  position: relative;
}

.menu-item-text{
  color: #fff;
  line-height: 45px;
  border-left: 2px solid rgba(255, 255, 255, 0.5);
  display: block;
  padding: 0 20px;
  font-weight: 700;
  font-size: 1.6rem; 
  text-shadow: 1px 0 0 #000,0 1px  0 #000, -1px 0px 0px #000, 0px -1px 0px #000;
}

.menu-item-text:hover::after{
  content: "";
  background-color: #000;
  display: block;
  height: 2px;
}

.menu-item-text:hover{
  color: #ff0;
  cursor: pointer;
}

.sub-menu{
  position: absolute;
  top: 50px;
  white-space: nowrap;
}

.sub-menu a::before { 
  font-family: "fontello";
  content: "\e804";
  padding-right: 5px;
}

.sub-menu a:hover::before{
  content: "\e800";
}


.sub-menu li{
  display: inline-block;
}

.sub-menu a{
  display: inline-block;
  margin-right: 10px;
  padding: 8px 5px 10px 0;  
}


.menu-item:nth-child(1) .sub-menu{
  display: none;
  left: 0; 
}
.menu-item:nth-child(2) .sub-menu{
  display: none;
  left: 0;
}
.menu-item:nth-child(3) .sub-menu{
  display: none;
  left: 0;
}
.menu-item:nth-child(4) .sub-menu{
  display: none;
  right: 0;
}
.menu-item:nth-child(5) .sub-menu{
  display: none;
  right: 0;
}
.menu-item:nth-child(6) .sub-menu{
  display: none;
  right: 0;
}

/* 비주얼 */
.visual{
  background-color: lime;
  height: 10vh;
}

/* 메인 콘텐츠 */
.main{
  background-color: skyblue;
  /* float: left; 부모영역을 float처리해서 해결할 수도 있지만 이렇게 되면 마진값을 무시함*/
  /* height: 30vh; */
  /* overflow: hidden; */
  /* overflow는 부모영역에서 자식 영역이 플로트 되어 없는 것처럼 느껴져 세로 크기값을 잡지 못하는 경우에
  새로운 BFC를 생성하면서 크기를 읽어드리게 하면서 해결하는 방법
  overflow CSS 속성(property)은 그것의 블록 레벨 컨테이너(block-level container)보다 내용(content)이
  너무 클 때(즉, 내용을 감싸고 있는 영역보다 커졌을 때), 내용을 잘라낼 지, 스크롤 바를 보여줄 지,
  혹은 범위를 넘어가게 보여줄 지를 기술합니다.
  ie6 때는 zoom:1을 주면서 높이를 읽어드려 처리함
 */
  padding: 30px 15px;
  border-radius: 15px 15px 0 0;
}
/* .clearfix{ */
  /* clear: both; 는 블럭요소에서만 쓸수 있음, 인라인 요소는 무시됨*/
/* } 클리어픽스 div 삽입할 때 스타일을 이렇게 줘야함*/


.clearfix::after{
  /* 가상요소 셀렉터 */
  content: "";
  display: block;
  clear: both;
}

.group{
  height: 30vh;
  float: left;
  margin: 0 15px;
}
/* 노멀플로우 -> flaot 이용해서 띄우면 라인박스가 부모영역에 맞춰 맞춰짐 */
.group1{
  background-color: rgba(255, 255, 255, 0.5);
  /* position: relative; */
  /* left:-20px; 플로트 레이아웃 테스트 코드 */
  width: 250px;
}
.group2{
  background-color: hsla(120, 70%, 60%, 0.5);
  width: 380px;
}
/* 이미 그룹1이 float 되어 있으면 라인박스는 그 공간만큼을 뺀 가용가능한 사이즈로 맞춰짐 */
.group3{
  background-color: tomato;
  width: 190px;
}
.slogan{
  background-color: blueviolet;
  height: 10vh;
  clear: both;
  /* clear: both; 는 */
}
.footer-bg{
  background-color: orange;
}
.footer{
  background-color: silver;
  height: 10vh;
  
}